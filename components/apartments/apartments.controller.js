const Apartment = require('./apartments.model'); // –ò–º–ø–æ—Ä—Ç –º–æ–¥–µ–ª–∏ Apartment
const { uploadToGoogleCloud } = require('./apartmentsGoogleCloud'); // –ò–º–ø–æ—Ä—Ç —Ñ—É–Ω–∫—Ü–∏–∏ –∑–∞–≥—Ä—É–∑–∫–∏ –Ω–∞ Google Cloud

// –ö–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∫–≤–∞—Ä—Ç–∏—Ä—ã
const addApartment = async (req, res) => {
  try {
    // –ò–∑–≤–ª–µ–∫–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ —Ç–µ–ª–∞ –∑–∞–ø—Ä–æ—Å–∞
    const { objectName, category, description, city, street, price, photos, district } = req.body;

    const photoUrls = []; // –ú–∞—Å—Å–∏–≤ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è URL –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã—Ö —Ñ–æ—Ç–æ

    // –ï—Å–ª–∏ —Ñ–∞–π–ª—ã –ø–µ—Ä–µ–¥–∞–Ω—ã
    if (req.files && req.files.length) {
      for (const file of req.files) { // –î–ª—è –∫–∞–∂–¥–æ–≥–æ —Ñ–∞–π–ª–∞
        const url = await uploadToGoogleCloud(file); // –ó–∞–≥—Ä—É–∂–∞–µ–º —Ñ–∞–π–ª –≤ GCS –∏ –ø–æ–ª—É—á–∞–µ–º URL
        photoUrls.push(url); // –î–æ–±–∞–≤–ª—è–µ–º URL –≤ –º–∞—Å—Å–∏–≤
      }
    }
// objectName,
    // –°–æ–∑–¥–∞—ë–º –Ω–æ–≤—É—é –∑–∞–ø–∏—Å—å –∫–≤–∞—Ä—Ç–∏—Ä—ã
    const apartment = new Apartment({
      district,
      category,
      description,
      city,
      objectName,
      street,
      price,
      // rooms,     // üëà
      // beds,    // üëà
      // floor,     // üëà
      photos, // –°–æ—Ö—Ä–∞–Ω—è–µ–º –º–∞—Å—Å–∏–≤ URL —Ñ–æ—Ç–æ
      ...req.body
    });

    await apartment.save(); // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ MongoDB

    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É—Å–ø–µ—à–Ω—ã–π –æ—Ç–≤–µ—Ç
    res.status(201).json({ message: '–û–±—ä—è–≤–ª–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–æ', apartment });
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏:', error); // –õ–æ–≥–≥–∏—Ä—É–µ–º –æ—à–∏–±–∫—É
    res.status(500).json({ message: '–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –æ–±—ä—è–≤–ª–µ–Ω–∏—è' }); // –û—Ç–≤–µ—Ç —Å –æ—à–∏–±–∫–æ–π
  }
};

// ‚úÖ –ö–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –≤—Å–µ—Ö –∫–≤–∞—Ä—Ç–∏—Ä
const getAllApartments = async (req, res) => {
  try {
    const apartments = await Apartment.find(); // –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –∞–ø–∞—Ä—Ç–∞–º–µ–Ω—Ç—ã –∏–∑ MongoDB
    res.status(200).json(apartments); // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∫–ª–∏–µ–Ω—Ç—É
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∫–≤–∞—Ä—Ç–∏—Ä:', error);
    res.status(500).json({ message: '–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∫–≤–∞—Ä—Ç–∏—Ä' });
  }
};

module.exports = { addApartment, getAllApartments };




// const Apartment = require('./apartments.model');
// const { uploadToGoogleCloud } = require('./apartmentsGoogleCloud');

// const addApartment = async (req, res) => {
//   try {
//     const { objectName, category, description, city, street, price, photos, district } = req.body;

//     const photoUrls = [];

//     if (req.files && req.files.length) {
//       for (const file of req.files) {
//         const url = await uploadToGoogleCloud(file);
//         photoUrls.push(url);
//       }
//     }

//     const safePhotos = Array.isArray(photos) ? photos : (photos ? [photos] : []);

//     const apartment = new Apartment({
//       district,
//       category,
//       description,
//       city,
//       objectName,
//       street,
//       price,
//       photos: photoUrls.length ? photoUrls : safePhotos,
//       ...req.body,
//     });

//     await apartment.save();

//     res.status(201).json({ message: '–û–±—ä—è–≤–ª–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–æ', apartment });
//   } catch (error) {
//     console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏:', error);
//     res.status(500).json({ message: '–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –æ–±—ä—è–≤–ª–µ–Ω–∏—è' });
//   }
// };

// // üî• –≠–¢–û –û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–û
// const getAllApartments = async (req, res) => {
//   try {
//     const apartments = await Apartment.find();
//     res.status(200).json(apartments);
//   } catch (error) {
//     console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∫–≤–∞—Ä—Ç–∏—Ä:', error);
//     res.status(500).json({ message: '–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∫–≤–∞—Ä—Ç–∏—Ä' });
//   }
// };

// // üì¶ –í–æ—Ç –≠–¢–û –¥–æ–±–∞–≤—å –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –≤ —Å–∞–º—ã–π –Ω–∏–∑:
// module.exports = {
//   addApartment,
//   getAllApartments
// };
